name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin[patchelf] pytest psutil

    - name: Build package
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install maturin[patchelf]
        maturin develop

    - name: Run tests
      run: |
        source venv/bin/activate
        python -c "from fast_exif_reader import FastExifReader; print('Import successful')"
        python -c "import fast_exif_reader; print('Version:', fast_exif_reader.__version__)"
        if [ -f "tests/test_performance.py" ]; then
          python -m pytest tests/test_performance.py -v
        fi

    - name: Test CLI
      run: |
        source venv/bin/activate
        fast-exif-cli --version
        fast-exif-cli --help

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin[patchelf] black ruff

    - name: Format check (Rust)
      run: cargo fmt -- --check

    - name: Clippy check (Rust)
      run: cargo clippy -- -D warnings

    - name: Format check (Python)
      run: black --check tests/ examples/ cli/

    - name: Lint check (Python)
      run: ruff check tests/ examples/ cli/

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin[patchelf] safety

    - name: Rust security audit
      run: |
        cargo install cargo-audit
        cargo audit

    - name: Python security audit
      run: |
        pip install safety
        safety check
