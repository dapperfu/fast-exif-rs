name: Build Release Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v0.4.9)'
        required: true
        default: 'v0.4.9'

jobs:
  build-wheel:
    name: Build Wheel for Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin[patchelf]

    - name: Build wheel
      run: |
        python -m venv venv
        if [ "$RUNNER_OS" = "Windows" ]; then
          venv\Scripts\activate
        else
          source venv/bin/activate
        fi
        pip install maturin[patchelf]
        maturin build --release --out dist

    - name: Upload wheel to release
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: wheel-py${{ matrix.python-version }}-${{ matrix.os }}
        path: dist/*.whl

  create-release:
    name: Create Release
    needs: build-wheel
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Fast EXIF Reader ${{ github.ref_name }}
          
          ### Installation
          
          Download the appropriate wheel file for your system and install with:
          ```bash
          pip install fast_exif_reader-*.whl
          ```
          
          ### Changes in this release:
          - Upgraded pyo3 to 0.24.2 for security improvements
          - Fixed all CI issues and improved compatibility
          - Enhanced error handling and logging
          - Improved Windows support
          
          ### Supported Python Versions
          - Python 3.10+
          - Python 3.12 (recommended)
          
          ### Supported Platforms
          - Linux (x86_64)
          - Windows (x86_64) 
          - macOS (x86_64)
        files: dist/*.whl
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
